DOCKER COMPOSE

docker compose is a tool to define and running multiple docker container at once.
with using docker compose we can use file .YAML to config the docker container
also with the command, we can create all the docker container and running from the config file
and then we dont need to type docker create again when we want to create container

-multiple isolated environment inside one docker host/server. Its mean we can create several environment for dockre compose
by default project name will using the folder name of config

-only make the container change, docker compose can detect which container to create and not re-create from file change in config

WHEN WE USING DOCKER COMPOSE
- create development environment. When we develop app, we also need different tool for each project. We can use docker compose to set up
- automated testing. often we create automation testing, when there was a lot thing to run manually. we can use docker compose to set up the environment
- deployement. docker compose can be use to deploy our application, so we dont need to start manually our application, just use docker compose


CHECK DOCKER COMPOSE
we can just docker compose version to check if docker compose is installed

FILE CONFIG
file config of docker compose is using .YAML file
yaml file is like json file but more simple and easy to read
usually file config of docker compose is named docker-compose.yaml
by default the name of project is the root folder name of the config file

YAML
file type to save configuration
yaml has attribute and value


--DOCKER CONTAINER in DOCKER COMPOSE
we can create docker container which just add at service in docker compose file, at that service we can add the configuration of the container
in this services we can define the name of contaienr, image, and anything else


--CREATE CONTAINER IN COMPOSE 
by this command we can create a docker container base on what we create in .yaml (just create not running)
if the container is already exist, docker compose will not create the container again 

docker container ls -a -> to see if the container is created

--RUNNING CONTAINER IN COMPOSE
after we create the container we need to run the container
we can use command "docker container start" or using docker compose "docker compose start"

--SHOW CONTAINER IN COMPOSE
docker compose ps -> to show the running container that cdreate by docker compose
docker contaiener ps -> to show all the running container although not created by docker compose

--STOP CONTAINER IN COMPOSE
docker compose stop -> just stop the container inside the conf file not deleted the container

--DELETE CONTAINER IN COMPOSE 
docker compose down -> delete the container, network, voluem inside the conf file

--PROJECT NAME
when we using docker compose the information of conf of docker compose will automatically save in the project
by default the name of the project is folder name where the file docker-compose.yaml located

docker compose ls -> to see running project

--DOCKER COMPOSE SERVICE
in docker compose the container is saved inside configuration file called service
we can add more than one service inside the conf file

--COMMENT IN YAML
we can use # to comment in yaml file and it will be ignore by docker compose.

--PORT FORWARDING IN COMPOSE
we can use port forwarding in docker compose, we can add port in the service configuration (every container)
attribute for port including array of object port
- Short Syntax -> portHOST : portCONTAINER -> portHOST is the port in our machine, portCONTAINER is the port in container -> 8000:80
- Long Syntax we can add many attribute like target, published, and protocol

--ENVIRONMENT VARIABLE IN COMPOSE
we can use environment variable in docker compose, we can add environment variable (attribute) in the service configuration (every container)

--BIND MOUNT IN COMPOSE
we can use bind mount in docker compose, we can add volume (attribute) in the service configuration (every container)
the function of bind mount is to use connect the folder in our machine to the folder in container
there was short syntax for bind mount and also long syntax

--VOLUME IN COMPOSE
docker compose also can use to create a volume, we can add volume (attribute) in the service configuration (every container)
if we want to use volume we need to create the container that using that volume first

when we using docker compose down the volume will not deleted, we need to delete it manually

docker volume rm [name]


--NETWORK IN COMPOSE
docker compose also can use to create a network, we can add network (attribute) in the service configuration (every container)
when we not create a spesific network in docker compose, docker compose will create a network for us (project_name_default)
thats mean all container in the same project (compose.yaml) will be in the same network
when we using docker compose down the network will not deleted, we need to delete it manually 

same as volume we need to create container to use the network, we can use more than one network

--DEPENDS ON
when we create a lot container some times one container is depends on other contaienr
simply we need to create an order to create the container

by default docker container is create togehter in random order

but we can use depends on to create the order

--RESTART POLICY
by default when we create a container and the container is stop, the container will not running again
we need to start it mannually

but in docker compose we can force the container to restart the process again, we can use attribute restart in the service configuration
restart have several option
- no -> default, not restart the container
- always -> always restart the container
- on-failure -> restart the container when the container is stop with error
- unless-stopped -> restart the container when the container is stop with error or we stop the container


--RESOURCE LIMIT IN COMPOSE
we also can use file configuration docker compose to control the resource limit for CPU and Memory for every container that we create
in resource attribute we can choose for the limit and reservations

reservations is a resource that guaranteed to be available for container
limit is max limit for resource that given to container but the resource can taken by other container


--DOCKERFILE IN COMPOSE
we can also create our customize image using dockerfile and running using docker-compose
we can use build attribute in the service configuration to build the image from dockerfile
- context attribute to define the location of dockerfile
- dockerfile attribute to define the name of dockerfile
- args attribute to define the argument that we want to use in dockerfile

by default docker compose will create the image with name projectname_servicename
we can change the name of the image using image attribute in the service configuration

when we use docker compose start or create the compose will be automated build the image from dockerfile (also the container)
we can use command docker compose build to only build the image first

to deleting the image from docker compose will not be same as deleting the container and compose
so we need to delete the image manually (also for volume)


--HEALTHCHECK IN COMPOSE
by default container that we make in manual way and in compose way always use health check  in dockerfile
but, if we want to change the health check we can use healthcheck attribute in the service configuration
healthcheck have several option
- test -> to define the command that will be use to check the health of container
- interval -> to define the interval of health check
- timeout -> to define the timeout of health check
- retries -> to define the retries of health check
- start_period -> to define the start period of health check

quiet same when we create healtcheck in dockerfile

--EXTEND SERVICE IN COMPOSE
docker compose have feature extend service that can merge several service in one service
and than, we can create general config file and special for every type of environment
after running docker compose, we can use command -f namefile.yaml to use filename thats not docker-compose file

docker compose -f docker-compose.yaml -f docker-compose.dev.yaml create -> to create docker compose with 2 file config (extend)